/*
 * 接口文档
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * FinancialRecord
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-10T02:09:28.592Z")
public class FinancialRecord {
  @SerializedName("accountId")
  private Long accountId = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("createTime")
  private OffsetDateTime createTime = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("isDelete")
  private Integer isDelete = null;

  @SerializedName("transactionDesc")
  private String transactionDesc = null;

  @SerializedName("transactionTime")
  private OffsetDateTime transactionTime = null;

  @SerializedName("transactionType")
  private Integer transactionType = null;

  @SerializedName("updateTime")
  private OffsetDateTime updateTime = null;

  @SerializedName("userId")
  private Long userId = null;

  public FinancialRecord accountId(Long accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @ApiModelProperty(value = "")
  public Long getAccountId() {
    return accountId;
  }

  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }

  public FinancialRecord amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public FinancialRecord category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(value = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public FinancialRecord createTime(OffsetDateTime createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreateTime() {
    return createTime;
  }

  public void setCreateTime(OffsetDateTime createTime) {
    this.createTime = createTime;
  }

  public FinancialRecord id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public FinancialRecord isDelete(Integer isDelete) {
    this.isDelete = isDelete;
    return this;
  }

   /**
   * Get isDelete
   * @return isDelete
  **/
  @ApiModelProperty(value = "")
  public Integer getIsDelete() {
    return isDelete;
  }

  public void setIsDelete(Integer isDelete) {
    this.isDelete = isDelete;
  }

  public FinancialRecord transactionDesc(String transactionDesc) {
    this.transactionDesc = transactionDesc;
    return this;
  }

   /**
   * Get transactionDesc
   * @return transactionDesc
  **/
  @ApiModelProperty(value = "")
  public String getTransactionDesc() {
    return transactionDesc;
  }

  public void setTransactionDesc(String transactionDesc) {
    this.transactionDesc = transactionDesc;
  }

  public FinancialRecord transactionTime(OffsetDateTime transactionTime) {
    this.transactionTime = transactionTime;
    return this;
  }

   /**
   * Get transactionTime
   * @return transactionTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTransactionTime() {
    return transactionTime;
  }

  public void setTransactionTime(OffsetDateTime transactionTime) {
    this.transactionTime = transactionTime;
  }

  public FinancialRecord transactionType(Integer transactionType) {
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Get transactionType
   * @return transactionType
  **/
  @ApiModelProperty(value = "")
  public Integer getTransactionType() {
    return transactionType;
  }

  public void setTransactionType(Integer transactionType) {
    this.transactionType = transactionType;
  }

  public FinancialRecord updateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }

  public FinancialRecord userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinancialRecord financialRecord = (FinancialRecord) o;
    return Objects.equals(this.accountId, financialRecord.accountId) &&
        Objects.equals(this.amount, financialRecord.amount) &&
        Objects.equals(this.category, financialRecord.category) &&
        Objects.equals(this.createTime, financialRecord.createTime) &&
        Objects.equals(this.id, financialRecord.id) &&
        Objects.equals(this.isDelete, financialRecord.isDelete) &&
        Objects.equals(this.transactionDesc, financialRecord.transactionDesc) &&
        Objects.equals(this.transactionTime, financialRecord.transactionTime) &&
        Objects.equals(this.transactionType, financialRecord.transactionType) &&
        Objects.equals(this.updateTime, financialRecord.updateTime) &&
        Objects.equals(this.userId, financialRecord.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, amount, category, createTime, id, isDelete, transactionDesc, transactionTime, transactionType, updateTime, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinancialRecord {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDelete: ").append(toIndentedString(isDelete)).append("\n");
    sb.append("    transactionDesc: ").append(toIndentedString(transactionDesc)).append("\n");
    sb.append("    transactionTime: ").append(toIndentedString(transactionTime)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * 接口文档
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * LoginLogQueryRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-10T02:09:28.592Z")
public class LoginLogQueryRequest {
  @SerializedName("browserInfo")
  private String browserInfo = null;

  @SerializedName("current")
  private Integer current = null;

  @SerializedName("deviceType")
  private String deviceType = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("ipAddress")
  private String ipAddress = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("loginTime")
  private OffsetDateTime loginTime = null;

  @SerializedName("operatingSystem")
  private String operatingSystem = null;

  @SerializedName("pageSize")
  private Integer pageSize = null;

  @SerializedName("searchText")
  private String searchText = null;

  @SerializedName("sortField")
  private String sortField = null;

  @SerializedName("sortOrder")
  private String sortOrder = null;

  @SerializedName("userId")
  private Long userId = null;

  public LoginLogQueryRequest browserInfo(String browserInfo) {
    this.browserInfo = browserInfo;
    return this;
  }

   /**
   * Get browserInfo
   * @return browserInfo
  **/
  @ApiModelProperty(value = "")
  public String getBrowserInfo() {
    return browserInfo;
  }

  public void setBrowserInfo(String browserInfo) {
    this.browserInfo = browserInfo;
  }

  public LoginLogQueryRequest current(Integer current) {
    this.current = current;
    return this;
  }

   /**
   * Get current
   * @return current
  **/
  @ApiModelProperty(value = "")
  public Integer getCurrent() {
    return current;
  }

  public void setCurrent(Integer current) {
    this.current = current;
  }

  public LoginLogQueryRequest deviceType(String deviceType) {
    this.deviceType = deviceType;
    return this;
  }

   /**
   * Get deviceType
   * @return deviceType
  **/
  @ApiModelProperty(value = "")
  public String getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(String deviceType) {
    this.deviceType = deviceType;
  }

  public LoginLogQueryRequest id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public LoginLogQueryRequest ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @ApiModelProperty(value = "")
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public LoginLogQueryRequest location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public LoginLogQueryRequest loginTime(OffsetDateTime loginTime) {
    this.loginTime = loginTime;
    return this;
  }

   /**
   * Get loginTime
   * @return loginTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLoginTime() {
    return loginTime;
  }

  public void setLoginTime(OffsetDateTime loginTime) {
    this.loginTime = loginTime;
  }

  public LoginLogQueryRequest operatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

   /**
   * Get operatingSystem
   * @return operatingSystem
  **/
  @ApiModelProperty(value = "")
  public String getOperatingSystem() {
    return operatingSystem;
  }

  public void setOperatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
  }

  public LoginLogQueryRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @ApiModelProperty(value = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public LoginLogQueryRequest searchText(String searchText) {
    this.searchText = searchText;
    return this;
  }

   /**
   * Get searchText
   * @return searchText
  **/
  @ApiModelProperty(value = "")
  public String getSearchText() {
    return searchText;
  }

  public void setSearchText(String searchText) {
    this.searchText = searchText;
  }

  public LoginLogQueryRequest sortField(String sortField) {
    this.sortField = sortField;
    return this;
  }

   /**
   * Get sortField
   * @return sortField
  **/
  @ApiModelProperty(value = "")
  public String getSortField() {
    return sortField;
  }

  public void setSortField(String sortField) {
    this.sortField = sortField;
  }

  public LoginLogQueryRequest sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @ApiModelProperty(value = "")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public LoginLogQueryRequest userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginLogQueryRequest loginLogQueryRequest = (LoginLogQueryRequest) o;
    return Objects.equals(this.browserInfo, loginLogQueryRequest.browserInfo) &&
        Objects.equals(this.current, loginLogQueryRequest.current) &&
        Objects.equals(this.deviceType, loginLogQueryRequest.deviceType) &&
        Objects.equals(this.id, loginLogQueryRequest.id) &&
        Objects.equals(this.ipAddress, loginLogQueryRequest.ipAddress) &&
        Objects.equals(this.location, loginLogQueryRequest.location) &&
        Objects.equals(this.loginTime, loginLogQueryRequest.loginTime) &&
        Objects.equals(this.operatingSystem, loginLogQueryRequest.operatingSystem) &&
        Objects.equals(this.pageSize, loginLogQueryRequest.pageSize) &&
        Objects.equals(this.searchText, loginLogQueryRequest.searchText) &&
        Objects.equals(this.sortField, loginLogQueryRequest.sortField) &&
        Objects.equals(this.sortOrder, loginLogQueryRequest.sortOrder) &&
        Objects.equals(this.userId, loginLogQueryRequest.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(browserInfo, current, deviceType, id, ipAddress, location, loginTime, operatingSystem, pageSize, searchText, sortField, sortOrder, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginLogQueryRequest {\n");
    
    sb.append("    browserInfo: ").append(toIndentedString(browserInfo)).append("\n");
    sb.append("    current: ").append(toIndentedString(current)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    loginTime: ").append(toIndentedString(loginTime)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    searchText: ").append(toIndentedString(searchText)).append("\n");
    sb.append("    sortField: ").append(toIndentedString(sortField)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


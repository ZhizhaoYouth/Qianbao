/*
 * 接口文档
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

import org.threeten.bp.OffsetDateTime;

/**
 * LoginLogAddRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-10T02:09:28.592Z")
public class LoginLogAddRequest {
  @SerializedName("browserInfo")
  private String browserInfo = null;

  @SerializedName("deviceType")
  private String deviceType = null;

  @SerializedName("ipAddress")
  private String ipAddress = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("loginTime")
  private String loginTime = null;

  @SerializedName("operatingSystem")
  private String operatingSystem = null;

  public LoginLogAddRequest browserInfo(String browserInfo) {
    this.browserInfo = browserInfo;
    return this;
  }

   /**
   * Get browserInfo
   * @return browserInfo
  **/
  @ApiModelProperty(value = "")
  public String getBrowserInfo() {
    return browserInfo;
  }

  public void setBrowserInfo(String browserInfo) {
    this.browserInfo = browserInfo;
  }

  public LoginLogAddRequest deviceType(String deviceType) {
    this.deviceType = deviceType;
    return this;
  }

   /**
   * Get deviceType
   * @return deviceType
  **/
  @ApiModelProperty(value = "")
  public String getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(String deviceType) {
    this.deviceType = deviceType;
  }

  public LoginLogAddRequest ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @ApiModelProperty(value = "")
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public LoginLogAddRequest location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public LoginLogAddRequest loginTime(String loginTime) {
    this.loginTime = loginTime;
    return this;
  }

   /**
   * Get loginTime
   * @return loginTime
  **/
  @ApiModelProperty(value = "")
  public String getLoginTime() {
    return loginTime;
  }

  public void setLoginTime(String loginTime) {
    this.loginTime = loginTime;
  }

  public LoginLogAddRequest operatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

   /**
   * Get operatingSystem
   * @return operatingSystem
  **/
  @ApiModelProperty(value = "")
  public String getOperatingSystem() {
    return operatingSystem;
  }

  public void setOperatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginLogAddRequest loginLogAddRequest = (LoginLogAddRequest) o;
    return Objects.equals(this.browserInfo, loginLogAddRequest.browserInfo) &&
        Objects.equals(this.deviceType, loginLogAddRequest.deviceType) &&
        Objects.equals(this.ipAddress, loginLogAddRequest.ipAddress) &&
        Objects.equals(this.location, loginLogAddRequest.location) &&
        Objects.equals(this.loginTime, loginLogAddRequest.loginTime) &&
        Objects.equals(this.operatingSystem, loginLogAddRequest.operatingSystem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(browserInfo, deviceType, ipAddress, location, loginTime, operatingSystem);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginLogAddRequest {\n");
    
    sb.append("    browserInfo: ").append(toIndentedString(browserInfo)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    loginTime: ").append(toIndentedString(loginTime)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

